import{u as h}from"./BmjGI-Lu.js";import{br as m,bp as w,bs as L,E as C,bt as f,bq as r,a3 as v}from"./BQemCU6N.js";const S=()=>{const e=v(),n=m(),i=h(),t=w(),c=L(),a=C(()=>n.value!==null);async function d(){n.value=await i(t.endpoints.user)}async function p(u){const o=f();if(a.value===!0){if(t.redirectIfAuthenticated===!1)throw new Error("User is already authenticated");if(t.redirect.onLogin===!1||t.redirect.onLogin===o.path)return;await e.runWithContext(()=>r(t.redirect.onLogin))}const g=await i(t.endpoints.login,{method:"post",body:u});if(t.mode==="token"&&await c.tokenStorage.set(e,g.token),await d(),t.redirect.keepRequestedRoute){const s=o.query.redirect;if(s&&s!==o.path){await e.runWithContext(()=>r(s));return}}t.redirect.onLogin===!1||o.path===t.redirect.onLogin||await e.runWithContext(()=>r(t.redirect.onLogin))}async function l(){if(a.value===!1)throw new Error("User is not authenticated");const u=f();await i(t.endpoints.logout,{method:"post"}),n.value=null,t.mode==="token"&&await c.tokenStorage.set(e,void 0),!(t.redirect.onLogout===!1||u.path===t.redirect.onLogout)&&await e.runWithContext(()=>r(t.redirect.onLogout))}return{user:n,isAuthenticated:a,login:p,logout:l,refreshIdentity:d}};export{S as u};
